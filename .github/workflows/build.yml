# based on https://github.com/Arcnor/MiyooCFW/blob/ci/.github/workflows/main.yml
name: Build

# Run on changes (including automated ones from the update job), allow manual triggering from the Actions tab
on: [push, pull_request, workflow_dispatch]

jobs:

  # https://github.com/MiyooCFW/uboot/blob/master/.github/workflows/main.yml
  uboot:
    uses: MiyooCFW/uboot/.github/workflows/main.yml@master
    with:
      submodule: uboot

  # https://github.com/MiyooCFW/kernel/blob/master/.github/workflows/build.yml
  kernel:
    uses: MiyooCFW/kernel/.github/workflows/build.yml@master
    with:
      submodule: kernel
        
  # https://github.com/MiyooCFW/logo/blob/master/.github/workflows/c-cpp.yml
  logo:
    uses: MiyooCFW/logo/.github/workflows/c-cpp.yml@master
    with:
      submodule: logo

  # https://github.com/MiyooCFW/daemon/blob/master/.github/workflows/c-cpp.yml
  daemon:
    uses: MiyooCFW/daemon/.github/workflows/c-cpp.yml@master
    with:
      submodule: daemon
        
  # https://github.com/MiyooCFW/miyooctl/blob/master/.github/workflows/build.yml
  miyooctl:
    uses: MiyooCFW/miyooctl/.github/workflows/build.yml@master
    with:
      submodule: miyooctl

  # https://github.com/MiyooCFW/gmenu2x/blob/master/.github/workflows/c-cpp.yml
  gmenu2x:
    uses: MiyooCFW/gmenu2x/.github/workflows/c-cpp.yml@master
    with:
      submodule: gmenu2x
       
  # https://github.com/MiyooCFW/buildroot/blob/master/.github/workflows/rootfs.yml
  build-image:
    uses: MiyooCFW/buildroot/.github/workflows/build.yml@master
    with:
      submodule: buildroot

  # repack final images for beta release with git commit-tag
  fetch-images:
    name: MiyooCFW
    needs: 
    - build-image
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - run: echo "version=$GITHUB_REF_NAME-$(git rev-parse --short HEAD)" | sed 's#/#-#g' >> $GITHUB_OUTPUT
      id: version
    - run: echo "Version ${{ steps.version.outputs.version }}"
    - uses: actions/download-artifact@v3
    - run: find .
    - uses: actions/upload-artifact@v3
      with:
        # we are using uClibc for backward compatibility & musl for development releases
        name: "MiyooCFW-BETA ${{ steps.version.outputs.version }}"
        path: "*/*.img"
        if-no-files-found: error # 'error', 'warn', 'ignore'; defaults to `warn`

  # repack current submodules with git commit-tag
  fetch-submodules:
    name: MiyooCFW (submodules)
    needs: 
    - uboot
    - kernel
    - logo
    - daemon
    - miyooctl
    - gmenu2x
    - build-image
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - run: echo "version=$GITHUB_REF_NAME-$(git rev-parse --short HEAD)" | sed 's#/#-#g' >> $GITHUB_OUTPUT
      id: version
    - run: echo "Version ${{ steps.version.outputs.version }}"
    - name: Clean main repo files
      run: |
        find .
        rm -r *
    - uses: actions/download-artifact@v3
    - name: Remove images and graphs from submodule pack
      run: |
          rm -r *image* *graph*
    - name: Move all left artifacts to "submodules" dir
      run: |
          shopt -s extglob
          mkdir submodules && mv !(submodules|*/) submodules/
    - name: List uploaded files
      run: find .
    - uses: actions/upload-artifact@v3
      with:
        name: "MiyooCFW-submodules ${{ steps.version.outputs.version }}"
        path: |
          submodules
        if-no-files-found: error # 'error', 'warn', 'ignore'; defaults to `warn`

  # delete recurring artifacts
  purge-artifact:
    name: Artifacts cleanup
    continue-on-error: true
    needs: 
    - fetch-images
    - fetch-submodules
    runs-on: ubuntu-20.04
    steps:
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: "!MiyooCFW*"
